// Generated by CoffeeScript 1.4.0
(function() {
  var EventModule, Light,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventModule = (function() {

    function EventModule() {}

    EventModule.prototype.on = function(name, callback) {
      if (this.callbacks == null) {
        this.callbacks = {};
      }
      if (this.callbacks[name] == null) {
        this.callbacks[name] = [];
      }
      this.callbacks[name].push(callback);
      return this;
    };

    EventModule.prototype.trigger = function(name) {
      var callback, list, _i, _len, _ref;
      list = (_ref = this.callbacks) != null ? _ref[name] : void 0;
      if (!list) {
        return this;
      }
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        callback = list[_i];
        callback();
      }
      return this;
    };

    return EventModule;

  })();

  Light = (function(_super) {

    __extends(Light, _super);

    function Light() {
      var _this = this;
      this.powered = false;
      this.el = $('#light');
      this.el.click(function() {
        return _this.toggle();
      });
    }

    Light.prototype.powerOn = function() {
      this.powered = true;
      this.el.css('background', 'yellow');
      this.trigger('poweron');
      return this;
    };

    Light.prototype.powerOff = function() {
      this.powered = false;
      this.el.css('background', 'white');
      this.trigger('poweroff');
      return this;
    };

    Light.prototype.toggle = function() {
      if (this.powered) {
        this.powerOff();
      } else {
        this.powerOn();
      }
      return this;
    };

    return Light;

  })(EventModule);

  $(function() {
    var light;
    light = new Light;
    light.on('poweron', function() {
      return alert('light on!');
    });
    return light.on('poweroff', function() {
      return alert('light off!');
    });
  });

}).call(this);
